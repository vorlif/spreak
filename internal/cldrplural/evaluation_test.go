// This file is generated by cldrplural/generator/generate.sh; DO NOT EDIT
package cldrplural

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestMustParseRules(t *testing.T) {
	t.Run("panic on invalid rule", func(t *testing.T) {
		rawRules := map[Category]string{
			One: "abcdez",
		}
		f := func() {
			MustParseRules(rawRules)
		}

		assert.Panics(t, f)
	})
}

func TestParseRules(t *testing.T) {
	rawRules := map[Category]string{One: "i = 1 and v = 0"}
	set := MustParseRules(rawRules)
	assert.NotNil(t, set)
	assert.NotNil(t, set.Categories)
	assert.NotNil(t, set.FormFunc)
	assert.ElementsMatch(t, []Category{One, Other}, set.Categories)
	assert.Equal(t, One, set.FormFunc(NewOperands("1")))
	assert.Equal(t, Other, set.FormFunc(NewOperands("1.0")))
	assert.Equal(t, Other, set.FormFunc(NewOperands("1.1")))
}
